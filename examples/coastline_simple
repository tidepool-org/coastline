package main

import (
	"log"
	"net/http"

	"github.com/gorilla/mux"
	"github.com/tidepool-org/go-common"
	"github.com/tidepool-org/go-common/clients/disc"

	"./api"
	sc "./clients"
)

type (
	Config struct {
		//Mongo   mongo.Config        `json:"mongo"`
		Api     api.OAuthConfig     `json:"coastline"`
		Service disc.ServiceListing `json:"service"`
	}
)

func main() {
	var config Config

	if err := common.LoadConfig([]string{"./config/env.json", "./config/server.json"}, &config); err != nil {
		log.Panic("Problem loading config", err)
	}

	rtr := mux.NewRouter()

	/*
	 * Oauth2 setup
	 */
	oauthApi := api.InitOAuthApi(api.OAuthConfig{Salt: config.Api.Salt}, sc.NewTestStorage())
	oauthApi.SetHandlers("", rtr)

	http.ListenAndServe(":14005", rtr)

}
